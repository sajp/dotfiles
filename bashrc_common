umask 0007

# don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoredups:erasedups
export HISTSIZE=100000
export HISTFILESIZE=100000000

# Save and reload the history after each command finishes
#export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

# append to the history file, don't overwrite it
shopt -s histappend
# verify before running history command
#shopt -s histverify

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Expand the history size

# CDPATH
export CDPATH='.:~:~/workspace/sapientia-web/pipeline:/lustre/scratch106/projects/congenica'

# set edit mode to vi
set -o vi

# Aliases
alias up="cd .."
alias tu='top -o cpu' #cpu
alias tm='top -o vsize' #memory
alias tmux="tmux -2"
alias ll="ls -lhA --color --group-directories-first"
alias prettyjson='python -m json.tool'

# set svn default editor
export SVN_EDITOR=vim
export EDITOR=vim

# svndiff command that uses vim to view svn diffs
svndiff()
{
  svn diff "${@}" | view -
}

# ignore .svn folders in tab complete
export FIGNORE=.svn

# setup ack
export ACK_PAGER_COLOR="less -x4SRFX"
# -x4 = 4 character tabs
# -S = do not fold lines
# -R = colour
# -F = quit less if less than one screen
# -X = disable sending the termcap init and deinit strings to terminal

# set terminal title
set-title(){
  ORIG=$PS1
  TITLE="\e]2;$@\a"
  PS1=${ORIG}${TITLE}
}

#fzf
export FZF_DEFAULT_COMMAND='
  (git ls-tree -r --name-only HEAD ||
   find . -path "*/\.*" -prune -o -type f -print -o -type l -print |
      sed s/^..//) 2> /dev/null'

# fbr - checkout git branch (including remote branches), sorted by most recent commit, limit 30 last branches
fbr() {
  local branches branch
  branches=$(git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format="%(refname:short)") &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

# fe [FUZZY PATTERN] - Open the selected file with the default editor
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fe() {
  local files
  IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0))
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

# fd - cd to selected directory
#fd() {
  #local dir
  #dir=$(find ${1:-.} -path '*/\.*' -prune \
                  #-o -type d -print 2> /dev/null | fzf +m) &&
  #cd "$dir"
#}

# fshow - git commit browser
#fshow() {
  #git log --graph --color=always \
      #--format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  #fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      #--bind "ctrl-m:execute:
                #(grep -o '[a-f0-9]\{7\}' | head -1 |
                #xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                #{}
#FZF-EOF"
#}
